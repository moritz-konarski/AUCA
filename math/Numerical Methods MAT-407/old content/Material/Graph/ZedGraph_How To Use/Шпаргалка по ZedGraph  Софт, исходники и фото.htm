<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0038)http://jenyay.net/Programming/ZedGraph -->
<HTML><HEAD><TITLE>Шпаргалка по ZedGraph | Софт, исходники и фото</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META http-equiv=Content-Style-Type content=text/css><LINK 
href="Шпаргалка по ZedGraph  Софт, исходники и фото.files/pmwiki.css" 
type=text/css rel=stylesheet><LINK 
href="http://jenyay.net/phpmyopenid/index.php" rel=openid.server><LINK 
href="http://jenyay.net/phpmyopenid/index.php" rel=openid.delegate><!--HTMLHeader-->
<STYLE type=text/css>UL {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
OL {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
PRE {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
DL {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
P {
	MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px
}
CODE.escaped {
	WHITE-SPACE: nowrap
}
.vspace {
	MARGIN-TOP: 1.33em
}
.indent {
	MARGIN-LEFT: 40px
}
.outdent {
	MARGIN-LEFT: 40px; TEXT-INDENT: -40px
}
A.createlinktext {
	BORDER-BOTTOM: gray 1px dotted; TEXT-DECORATION: none
}
A.createlink {
	FONT-WEIGHT: bold; FONT-SIZE: smaller; POSITION: relative; TOP: -0.5em; TEXT-DECORATION: none; BORDER-BOTTOM-STYLE: none
}
IMG {
	BORDER-TOP-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px
}
DIV.tabledit {
	FONT-SIZE: smaller; TEXT-ALIGN: right
}
.editconflict {
	MARGIN-TOP: 1.33em; MARGIN-BOTTOM: 1.33em; COLOR: green; FONT-STYLE: italic
}
TABLE.markup {
	BORDER-RIGHT: #ccf 2px dotted; BORDER-TOP: #ccf 2px dotted; BORDER-LEFT: #ccf 2px dotted; WIDTH: 90%; BORDER-BOTTOM: #ccf 2px dotted
}
TD.markup1 {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px
}
TD.markup2 {
	PADDING-RIGHT: 10px; PADDING-LEFT: 10px
}
TABLE.vert TD.markup1 {
	BORDER-BOTTOM: #ccf 1px solid
}
TABLE.horiz TD.markup1 {
	BORDER-RIGHT: #ccf 1px solid; WIDTH: 23em
}
TABLE.markup CAPTION {
	TEXT-ALIGN: left
}
DIV.faq P {
	MARGIN-LEFT: 2em
}
DIV.faq PRE {
	MARGIN-LEFT: 2em
}
DIV.faq P.question {
	FONT-WEIGHT: bold; MARGIN: 1em 0px 0.75em
}
DIV.faqtoc DIV.faq  {
	DISPLAY: none
}
DIV.faqtoc DIV.faq P.question {
	DISPLAY: block; FONT-WEIGHT: normal; MARGIN: 0.5em 0px 0.5em 20px; LINE-HEIGHT: normal
}
DIV.faqtoc DIV.faq P.question  {
	DISPLAY: inline
}
.frame {
	BORDER-RIGHT: #cccccc 1px solid; PADDING-RIGHT: 4px; BORDER-TOP: #cccccc 1px solid; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; BORDER-LEFT: #cccccc 1px solid; PADDING-TOP: 4px; BORDER-BOTTOM: #cccccc 1px solid; BACKGROUND-COLOR: #f9f9f9
}
.lfloat {
	FLOAT: left; MARGIN-RIGHT: 0.5em
}
.rfloat {
	FLOAT: right; MARGIN-LEFT: 0.5em
}
A.varlink {
	TEXT-DECORATION: none
}
.vbnet {
	FONT-FAMILY: monospace
}
.vbnet .imp {
	FONT-WEIGHT: bold; COLOR: red
}
.vbnet .kw1 {
	COLOR: #0600ff
}
.vbnet .kw2 {
	COLOR: #ff8000
}
.vbnet .kw3 {
	COLOR: #008000
}
.vbnet .kw4 {
	COLOR: #ff0000
}
.vbnet .kw5 {
	COLOR: #804040
}
.vbnet .kw6 {
	COLOR: #0600ff
}
.vbnet .kw7 {
	COLOR: #0600ff
}
.vbnet .kw8 {
	COLOR: #0600ff
}
.vbnet .co1 {
	COLOR: #008080; FONT-STYLE: italic
}
.vbnet .coMULTI {
	COLOR: #008080; FONT-STYLE: italic
}
.vbnet .es0 {
	FONT-WEIGHT: bold; COLOR: #008080
}
.vbnet .br0 {
	COLOR: #000000
}
.vbnet .sy0 {
	COLOR: #008000
}
.vbnet .st0 {
	COLOR: #808080
}
.vbnet .nu0 {
	COLOR: #ff0000
}
.vbnet .me1 {
	COLOR: #0000ff
}
.vbnet SPAN.xtra {
	DISPLAY: block
}
.sourceblocklink {
	FONT-SIZE: smaller; TEXT-ALIGN: right
}
.sourceblocktext {
	BORDER-RIGHT: #808080 1px solid; PADDING-RIGHT: 0.5em; BORDER-TOP: #808080 1px solid; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; BORDER-LEFT: #808080 1px solid; COLOR: #000000; PADDING-TOP: 0.5em; BORDER-BOTTOM: #808080 1px solid; BACKGROUND-COLOR: #f1f0ed
}
.sourceblocktext DIV {
	FONT-SIZE: small; LINE-HEIGHT: 1; FONT-FAMILY: monospace; HEIGHT: 1%
}
.sourceblocktext DIV.head {
	PADDING-RIGHT: 0.5em; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; FONT: italic medium serif; PADDING-TOP: 0.5em
}
.sourceblocktext DIV.foot {
	PADDING-RIGHT: 0.5em; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; FONT: italic medium serif; PADDING-TOP: 0.5em
}
.csharp {
	FONT-FAMILY: monospace
}
.csharp .imp {
	FONT-WEIGHT: bold; COLOR: red
}
.csharp .kw1 {
	FONT-WEIGHT: bold; COLOR: #0600ff
}
.csharp .kw2 {
	FONT-WEIGHT: bold; COLOR: #ff8000
}
.csharp .kw3 {
	COLOR: #008000
}
.csharp .kw4 {
	FONT-WEIGHT: bold; COLOR: #0600ff
}
.csharp .kw5 {
	COLOR: #000000
}
.csharp .co1 {
	COLOR: #009f00; FONT-STYLE: italic
}
.csharp .co2 {
	COLOR: #009f00
}
.csharp .coMULTI {
	COLOR: #008080; FONT-STYLE: italic
}
.csharp .es0 {
	FONT-WEIGHT: bold; COLOR: #008080
}
.csharp .br0 {
	COLOR: #000000
}
.csharp .sy0 {
	COLOR: #008000
}
.csharp .st0 {
	COLOR: #808080
}
.csharp .nu0 {
	COLOR: #000000
}
.csharp .me1 {
	COLOR: #000000
}
.csharp .me2 {
	COLOR: #000000
}
.csharp SPAN.xtra {
	DISPLAY: block
}
</STYLE>
<LINK media=screen 
href="Шпаргалка по ZedGraph  Софт, исходники и фото.files/fox.css" type=text/css 
rel=stylesheet>
<SCRIPT language=javascript 
src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/guiedit.js" 
type=text/javascript></SCRIPT>
<LINK title="Софт, исходники и фото" href="http://jenyay.net/rss.xml" 
type=application/rss+xml rel=alternate><LINK title=Блог 
href="http://jenyay.net/blog/feed/" type=application/rss+xml rel=alternate>
<META content=index,follow name=robots>
<META 
content="ZedGraph, ZedGraphControl, компонент для рисования графиков, график, рисование графиков, C#, программирование, .net, dotnet" 
name=keywords>
<META 
content="Примеры программ на языке C# под платформу .NET Framework, использующие контрол ZedGraph для рисования двумерных графиков" 
name=description>
<META content="MSHTML 6.00.2900.2802" name=GENERATOR></HEAD>
<BODY><!--PageHeaderFmt-->
<DIV id=wikilogo>Подписка: <A style="COLOR: black; TEXT-DECORATION: none" 
href="http://jenyay.net/rss.xml"><IMG style="VERTICAL-ALIGN: middle" 
src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/rss_24.gif" border=0> 
<B>RSS сайта</B></A> и <A style="COLOR: black; TEXT-DECORATION: none" 
href="http://jenyay.net/blog/feed/"><IMG style="VERTICAL-ALIGN: middle" 
src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/rss_24.gif" border=0> 
<B>RSS блога</B></A>
<SCRIPT src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/orphus.js" 
type=text/javascript></SCRIPT>
 <A id=orphus href="http://orphus.ru/" target=_blank><IMG 
style="VERTICAL-ALIGN: middle" height=48 alt="Система Orphus" 
src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/Oleg_Fadjarov_btn2.gif" 
width=257 border=0></A></DIV>
<DIV id=wikihead>
<FORM action=http://jenyay.net><SPAN class=headnav><A accessKey=c 
href="http://jenyay.net/Programming/RecentChanges">Последние изменения</A> 
-</SPAN> <INPUT type=hidden value=Programming.ZedGraph name=n> <INPUT 
type=hidden value=search name=action> <A 
href="http://jenyay.net/PmWikiRu/SiteSearch">Поиск</A>: <INPUT 
class="inputbox searchbox" name=q> <INPUT class="inputbutton searchbutton" type=submit value=">>"></FORM></DIV><!--/PageHeaderFmt-->
<TABLE id=wikimid cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR><!--PageLeftFmt-->
    <TD id=wikileft vAlign=top>
      <P class=sidehead><A class=wikilink 
      href="http://jenyay.net/Main/HomePage">Начало</A> </P>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Soft/HomePage">Программки</A> </P>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/Texgui">TeXGui</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/SmilesArchive">SmilesArchive</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/Ljwatcher">LJWatcher</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/ServerTest">ServerTest</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/FastExit">FastExit</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/OpenUrl">OpenUrl</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Soft/HomePage">Другие…</A> </DIV>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Soft/Plugins">Плагины</A> </P>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Softreview/HomePage">Софт-обзоры</A> </P>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Programming/HomePage">Программирование</A> </P>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Net">.NET/C#</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Cpp">C++</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Python">Python</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Php">PHP</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Algorithm">Алгоритмы</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Tools">Инструменты</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Programming/Other">Остальное</A> </DIV>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Photo/HomePage">Фото</A> </P>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Animals">Животные</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/BlackWhite">Черно-белые</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Nature">Пейзажи/Природа</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/City">Город</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Sunset">Закаты</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Panoram">Панорамы</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Sport">Спорт</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Story">Репортаж</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Other">Разное</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Photo/Reports">Фотоотчеты</A> </DIV>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Main/Other">Разное</A> </P>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Main/Radio">Радиотехника</A> </DIV>
      <DIV class=indent><A class=wikilink 
      href="http://jenyay.net/Main/Stud">Студентам</A> </DIV>
      <P class="vspace sidehead"><A class=urllink 
      href="http://jenyay.net/blog">Блог</A> </P>
      <P class="vspace sidehead"><A class=wikilink 
      href="http://jenyay.net/Main/Contact">Контакты</A> </P></TD><!--/PageLeftFmt-->
    <TD id=wikibody vAlign=top><!--PageActionFmt-->
      <DIV id=wikicmds>
      <UL>
        <LI class=browse><A class=selflink accessKey="" 
        href="http://jenyay.net/Programming/ZedGraph">Просмотр</A> 
        <LI class=edit><A class=wikilink accessKey=e 
        href="http://jenyay.net/Programming/ZedGraph?action=edit" 
        rel=nofollow>Править</A> 
        <LI class=diff><A class=wikilink accessKey=h 
        href="http://jenyay.net/Programming/ZedGraph?action=diff" 
        rel=nofollow>История</A> 
        <LI class=print><A class=wikilink accessKey="" 
        href="http://jenyay.net/Programming/ZedGraph?action=print" 
        rel=nofollow>Печать</A> </LI></UL></DIV><!--PageTitleFmt-->
      <DIV id=wikititle>
      <DIV class=pagegroup><!--<a href='http://jenyay.net/Programming'>Programming</a> /--></DIV>
      <H1 class=pagetitle>Шпаргалка по ZedGraph</H1></DIV><!--PageText-->
      <DIV id=wikitext>
      <P class=vspace style="TEXT-ALIGN: center">
      <SCRIPT type=text/javascript><!--
			google_ad_client = 'pub-4934988039890493';
			/* 728x90, создано 14.12.08 */
			google_ad_slot = '2994245369';
			google_ad_width = 728;
			google_ad_height = 90;
			//-->
			</SCRIPT>

      <SCRIPT 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/show_ads.js" 
      type=text/javascript>
			</SCRIPT>
      </P>
      <DIV class=vspace></DIV>
      <H2>Оглавление</H2>
      <UL>
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Simple">Как 
        построить график y = f(x) по точкам</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Several">Как 
        нарисовать несколько графиков в одних осях</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Limit">Как 
        изменить пределы отображаемой области по осям</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Scatter">Как 
        нарисовать график в виде отдельных не связанных точек (scatter 
        graph)</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Zeroline">Как 
        спрятать горизонтальную линию по уровню y = 0 на графике</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Vertical">Как 
        нарисовать график по вертикали</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Draw">Как на 
        графике рисовать линии, стрелки и писать текст</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Masterpane">Как 
        на одном ZedGraphControl нарисовать несколько графиков</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Masterpane2">Как 
        задавать расположение отдельных графиков на MasterPane</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Grid">Как 
        включить отображение сетки и изменять ее внешний вид</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Radar">Что такое 
        RadarPointList</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Queue">Как 
        выводить постоянно обновляемые данные</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/Bar">Гистограммы 
        и текстовые оси</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/FontSize">Как 
        менять размеры шрифтов у различных элементов графика</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/AutoScale">Как 
        вернуть масштабу по осям значение по умолчанию</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/DashLine">Как 
        рисовать пунктирные и штрихпунктирные линии</A> 
        <LI><A class=wikilink 
        href="http://jenyay.net/ZedGraph/AddRemoveCurve">Как добавлять и удалять 
        кривые</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/NoName">Как не 
        отображать некоторые кривые в легенде</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/PointValues">Как 
        использовать всплывающие подсказки</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/BarWidth">Как 
        сделать так, чтобы столбцы в гистограмме прилегали друг к другу 
        вплотную</A> 
        <LI><A class=wikilink href="http://jenyay.net/ZedGraph/BarClusters">Что 
        такое кластеры и как их использовать в гистограммах</A> </LI></UL>
      <DIV class=vspace></DIV>
      <H2>Введение</H2>
      <P>ZedGraph - это очень удобный компонент для рисования графиков под .NET 
      Framework, но, к сожалению, документация к этому контролу довольно 
      скудная. Поэтому здесь я решил сделать что-то вроде шпаргалки или, если 
      угодно, HOWTO по компоненту ZedGraph. </P>
      <P class=vspace>То, что находится дальше на этой странице - это не 
      справка, а просто небольшие примеры, показывающие как использовать 
      какую-нибудь одну из возможностей контрола. Все основные пояснения по 
      использованию той или иной возможности будут написаны в виде комментариев 
      к коду. </P>
      <P class=vspace>Структура всех примеров одинаковая - главное окно, внутри 
      которого располагается экземпляр класса <EM>ZedGraphControl</EM>. Имя 
      экземпляра класса - <EM>zedGraph</EM>. В конструкторе окна вызывается 
      метод <EM>DrawGraph()</EM>, внутри которого и происходит заполнение 
      компонента данными. Поэтому в примерах ниже будут приводиться только 
      функции <EM>DrawGraph()</EM> и дополнительные функции, которые будут 
      зависеть от примера. </P>
      <P class=vspace>Все примеры объединены в одном solution для Visual Studio 
      2005 и написаны на языке C#, скачать их можно <A class=urllink 
      href="http://jenyay.net/uploads/Programming/ZedGraph/zedgraph_howto.zip">отсюда</A>. 
      </P>
      <P class=vspace>Эта шпаргалка со временем будет пополняться новыми 
      примерами. </P>
      <P class=vspace>Если у вас есть вопросы, которые требуют большого 
      количества кода, то пишите их лучше на <A class=urllink 
      href="http://jenyay.net/forum/viewforum.php?f=8">форум</A>, остальные 
      вопросы и пожелания можете писать в комментариях. </P>
      <DIV class=vspace></DIV>
      <H2>Краткие сведения о ZedGraph и полезные ссылки</H2>
      <P>Официальный сайт ZedGraph - <A class=urllink 
      href="http://zedgraph.org/">http://zedgraph.org/</A><BR>Требования - .NET 
      1.1 (для версии 4.x) или .NET 2.0 (для версии 5.x)<BR>Страница 
      документации - <A class=urllink 
      href="http://zedgraph.sourceforge.net/documentation/default.html">http://zedgraph.sourceforge.net/documentation/default.html</A><BR>Еще 
      есть неплохой материал на сайте CodeProject, с которого хорошо начинать 
      изучение этого компонента - <A class=urllink 
      href="http://www.codeproject.com/KB/graphics/zedgraph.aspx">http://www.codeproject.com/KB/graphics/zedgraph.aspx</A> 
      </P>
      <P class=vspace><A id=comments name=comments></A>
      <SCRIPT type=text/javascript><!--
			google_ad_client = 'pub-4934988039890493';
			/* 728x90, создано 14.12.08 */
			google_ad_slot = '2994245369';
			google_ad_width = 728;
			google_ad_height = 90;
			//-->
			</SCRIPT>

      <SCRIPT 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/show_ads.js" 
      type=text/javascript>
			</SCRIPT>
      </P>
      <DIV class=vspace></DIV>
      <DIV class=rater>
      <H5>Пожалуйста, оцените материал</H5>
      <P><IMG title="5 stars" alt="5 stars" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/green50star.gif"> 
      <SPAN style="FONT-SIZE: 83%">Рейтинг 5.0/</SPAN><SPAN 
      style="FONT-SIZE: 69%">5</SPAN>. <SPAN style="FONT-SIZE: 83%">Всего 34 
      голос(а, ов)</SPAN>
      <FORM action=http://jenyay.net/Programming/ZedGraph method=post><INPUT 
      type=hidden value=Programming.ZedGraph name=n><INPUT type=hidden 
      value=rater name=action><INPUT type=hidden value=1 name=rs_id><INPUT 
      id=rating_11 type=radio value=1 name=rating_1[]><LABEL 
      for=rating_11>Плохо</LABEL> <INPUT id=rating_12 type=radio value=2 
      name=rating_1[]><LABEL for=rating_12>Так себе</LABEL> <INPUT id=rating_13 
      type=radio value=3 name=rating_1[]><LABEL for=rating_13>Неплохо</LABEL> 
      <INPUT id=rating_14 type=radio value=4 name=rating_1[]><LABEL 
      for=rating_14>Хорошо</LABEL> <INPUT id=rating_15 type=radio value=5 
      name=rating_1[]><LABEL for=rating_15>Отлично</LABEL> <INPUT class=inputbutton type=submit value=Голосовать name=post><BR><STRONG></STRONG></P></FORM></DIV>
      <FORM action=http://jenyay.net/Programming/ZedGraph method=post><INPUT 
      type=hidden value=Programming.ZedGraph name=foxpage> <INPUT type=hidden 
      value=foxpost name=action> <INPUT type=hidden value=cbox name=foxname> 
      <INPUT type=hidden value=#append name=foxplace> <INPUT type=hidden 
      value=Site.FoxCommentTemplate name=template> 
      <HR>

      <TABLE border=0>
        <TBODY>
        <TR>
          <TD align=right>Автор:</TD>
          <TD><INPUT class=inputbox name=author></TD></TR>
        <TR>
          <TD align=right>Тема:</TD>
          <TD><INPUT class=inputbox size=60 name=heading></TD></TR>
        <TR>
          <TD>&nbsp;</TD>
          <TD align=left><STRONG>Ваш комментарий</STRONG></TD></TR>
        <TR>
          <TD>&nbsp;</TD>
          <TD>
            <SCRIPT language=javascript type=text/javascript>
insButton("\\'\\'", "\\'\\'", 'Выделено', "<img src='/pub/guibuttons/italic.gif' title='Курсивный шрифт' style='border:0px;' />", "");
insButton("\\'\\'\\'", "\\'\\'\\'", 'Усилено', "<img src='/pub/guibuttons/bold.gif' title='Полужирный шрифт' style='border:0px;' />", "");
insButton("{+", "+}", 'Underlined Text', "<img src='/pub/guibuttons/underline.gif' title='Underline' style='border:0px;' />", "");
insButton("\\'^", "^\\'", 'Верхний индекс', "<img src='/pub/guibuttons/sup.gif' title='Верхний индекс' style='border:0px;' />", "");
insButton("\\'_", "_\\'", 'Нижний индекс', "<img src='/pub/guibuttons/sub.gif' title='Нижний индекс' style='border:0px;' />", "");
insButton("%25center%25", "", '', "<img src='/pub/guibuttons/center.gif' title='Центрировать' style='border:0px;' />", "");
insButton("[[", "]]", 'Ссылка на страницу', "<img src='/pub/guibuttons/pagelink.gif' title='Ссылка на внутреннюю страницу' style='border:0px;' />", "");
insButton("[@", "@]", 'Code', "<img src='/pub/guibuttons/code.gif' title='Code' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/spacer.gif'  style='border:0px;' />", "");
insButton("\\{happy\\}", "", '', "<img src='/pub/guibuttons/happy.gif' title='Happy' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{wink\\}", "", '', "<img src='/pub/guibuttons/wink.gif' title='Wink' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{cool\\}", "", '', "<img src='/pub/guibuttons/cool.gif' title='Cool' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{confused\\}", "", '', "<img src='/pub/guibuttons/confused.gif' title='Confused' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{eek\\}", "", '', "<img src='/pub/guibuttons/eek.gif' title='Eek' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{rolleyes\\}", "", '', "<img src='/pub/guibuttons/rolleyes.gif' title='Roll eyes' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{sad\\}", "", '', "<img src='/pub/guibuttons/sad.gif' title='Sad' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{mad\\}", "", '', "<img src='/pub/guibuttons/mad.gif' title='Mad' style='border:0px;' />", "");
insButton("", "", '', "<img src='/pub/guibuttons/pixspace.gif'  style='border:0px;' />", "");
insButton("\\{biggrin\\}", "", '', "<img src='/pub/guibuttons/biggrin.gif' title='Big grin' style='border:0px;' />", "");
</SCRIPT>
          </TD></TR>
        <TR>
          <TD>&nbsp;</TD>
          <TD align=left><TEXTAREA id=text name=text rows=6 cols=60></TEXTAREA></TD></TR>
        <TR>
          <TD align=right>Введите код <SPAN style="COLOR: red">849</SPAN></TD>
          <TD align=left><INPUT class=inputbox name=access><INPUT type=hidden 
            value=849 name=accesscode></TD></TR>
        <TR>
          <TD>&nbsp;</TD>
          <TD><INPUT class=inputbutton type=submit value=Послать name=post></TD></TR></TBODY></TABLE></FORM>
      <DIV class=vspace></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Daisy</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">05.12.2008 - 03:05</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Большое спасибо, очень помогли! <IMG class=smiley title="happy smiley" 
      height=15 alt="happy smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/happy.gif" 
      width=15 border=0> </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">05.12.2008 - 09:22</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Очень приятно :) </P></DIV>
      <DIV class=vspace></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Anton</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">18.12.2008 - 12:24</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>А как установить ширину</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>никак не получается задать ширину отдельного GraphPane в MasterPane. 
      Как это сделать? У меня три столбиковых диаграммы и в каждой разное 
      количество баров, надо, чтобы в отдельная диаграмма занимала место (в 
      ширину) в зависимости от количества баров в ней относительно других в 
      этомже MasterPane </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">18.12.2008 - 21:30</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Anton</STRONG>, С MasterPane я как раз разбираюсь, но по Вашему 
      вопросу пока ничего сказать не могу. В ближайшее время выложу пример с 
      MasterPane, заодно посмотрю можно ли там вручную задавать размеры и 
      расположение отдельных Pane. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Anton</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2008 - 13:37</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Короче сам разобрался</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>В этой функции вычисляю размер необходимый для выделения под GraphPane 
      </P>
      <DIV class=vspace></DIV>
      <DIV class="sourceblock " id=sourceblock1>
      <DIV class=sourceblocktext>
      <DIV class=vbnet style="FONT-FAMILY: monospace"><SPAN 
      class=kw2>Private</SPAN> <SPAN class=kw6>Function</SPAN> 
      CalcPaneWidth<SPAN class=br0>(</SPAN><SPAN class=kw2>ByVal</SPAN> 
      allElementsCnt <SPAN class=kw2>As</SPAN> Single, <SPAN 
      class=kw2>ByVal</SPAN> paneElementsCnt <SPAN class=kw2>As</SPAN> Single, 
      <SPAN class=kw2>ByVal</SPAN> panesWidth <SPAN class=kw2>As</SPAN> 
      Single<SPAN class=br0>)</SPAN> <SPAN class=kw2>As</SPAN> Single<BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=kw6>Dim</SPAN> ReturnValue <SPAN 
      class=kw2>As</SPAN> Single <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw6>Dim</SPAN> OnePercent <SPAN class=kw2>As</SPAN> <SPAN 
      class=kw4>Double</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=br0>(</SPAN>panesWidth <SPAN class=sy0>/</SPAN> allElementsCnt<SPAN 
      class=br0>)</SPAN> <SPAN class=co1>'Ширину MasterPane делю на общее 
      количесво баров </SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw6>Dim</SPAN> paneWidthPercent <SPAN class=kw2>As</SPAN> <SPAN 
      class=kw4>Double</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=br0>(</SPAN>paneElementsCnt <SPAN class=sy0>*</SPAN> OnePercent<SPAN 
      class=br0>)</SPAN> <SPAN class=co1>'Умножаю на количество баров в 
      конкретном GraphPane</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; ReturnValue 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw7>CType</SPAN><SPAN 
      class=br0>(</SPAN>paneWidthPercent, Single<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw2>Return</SPAN> ReturnValue<BR>&nbsp; &nbsp; <SPAN 
      class=kw6>End</SPAN> <SPAN class=kw6>Function</SPAN><BR><BR>В коде где 
      заполняю графики пишу<BR><BR>SmallRect <SPAN class=sy0>=</SPAN> 
      mPane.<SPAN class=me1>Rect</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      SmallRect.<SPAN class=me1>Y</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>45</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN 
      class=me1>Height</SPAN> <SPAN class=sy0>=</SPAN> mPane.<SPAN 
      class=me1>Rect</SPAN>.<SPAN class=me1>Height</SPAN> <SPAN 
      class=sy0>-</SPAN> <SPAN class=nu0>45</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw2>For</SPAN> PaneIndex <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN> <SPAN class=kw2>To</SPAN> mPane.<SPAN 
      class=me1>PaneList</SPAN>.<SPAN class=me1>Count</SPAN> <SPAN 
      class=sy0>-</SPAN> <SPAN class=nu0>1</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>True</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Type</SPAN> <SPAN 
      class=sy0>=</SPAN> AxisType.<SPAN class=me1>Text</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=co1>'curPane.YAxis.Type = 
      AxisType.Exponent</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mPane.<SPAN class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>XAxis</SPAN>.<SPAN 
      class=me1>MajorGrid</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>True</SPAN> <SPAN class=co1>'Сетка по 
      X</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN 
      class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>MajorGrid</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>True</SPAN> <SPAN class=co1>'Сетка по 
      Y</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN 
      class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>Legend</SPAN>.<SPAN 
      class=me1>IsVisible</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>False</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mPane.<SPAN class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>14</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mPane.<SPAN class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>Border</SPAN>.<SPAN 
      class=me1>IsVisible</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>False</SPAN><BR><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>BaseDimension</SPAN> <SPAN class=sy0>=</SPAN> 4.0F<BR><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Margin</SPAN>.<SPAN class=me1>All</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>3</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Margin</SPAN>.<SPAN class=me1>Top</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>8</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>IsFontsScaled</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>False</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw6>If</SPAN> PaneIndex <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN> <SPAN class=kw2>Then</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN class=me1>X</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>5</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN class=kw6>Width</SPAN> 
      <SPAN class=sy0>=</SPAN> CalcPanewidth<SPAN 
      class=br0>(</SPAN>AllElementsCount, mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>CurveList</SPAN>.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=nu0>0</SPAN><SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Points</SPAN>.<SPAN class=me1>Count</SPAN>, mPane.<SPAN 
      class=me1>Rect</SPAN>.<SPAN class=kw6>Width</SPAN><SPAN class=br0>)</SPAN> 
      <SPAN class=sy0>+</SPAN> <SPAN class=nu0>20</SPAN><BR><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw2>ElseIf</SPAN> PaneIndex <SPAN 
      class=sy0>=</SPAN> mPane.<SPAN class=me1>PaneList</SPAN>.<SPAN 
      class=me1>Count</SPAN> <SPAN class=sy0>-</SPAN> <SPAN class=nu0>1</SPAN> 
      <SPAN class=kw2>Then</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; SmallRect.<SPAN class=me1>X</SPAN> <SPAN class=sy0>=</SPAN> 
      SmallRect.<SPAN class=me1>X</SPAN> <SPAN class=sy0>+</SPAN> mPane.<SPAN 
      class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex <SPAN 
      class=sy0>-</SPAN> <SPAN class=nu0>1</SPAN><SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Rect</SPAN>.<SPAN class=kw6>Width</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN class=kw6>Width</SPAN> 
      <SPAN class=sy0>=</SPAN> mPane.<SPAN class=me1>Rect</SPAN>.<SPAN 
      class=kw6>Width</SPAN> <SPAN class=sy0>-</SPAN> SmallRect.<SPAN 
      class=me1>X</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>YAxis</SPAN>.<SPAN class=me1>MinSpace</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw2>Else</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN class=me1>X</SPAN> <SPAN 
      class=sy0>=</SPAN> SmallRect.<SPAN class=me1>X</SPAN> <SPAN 
      class=sy0>+</SPAN> mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex <SPAN class=sy0>-</SPAN> <SPAN 
      class=nu0>1</SPAN><SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Rect</SPAN>.<SPAN class=kw6>Width</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SmallRect.<SPAN class=kw6>Width</SPAN> 
      <SPAN class=sy0>=</SPAN> CalcPanewidth<SPAN 
      class=br0>(</SPAN>AllElementsCount, mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>CurveList</SPAN>.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=nu0>0</SPAN><SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>Points</SPAN>.<SPAN class=me1>Count</SPAN>, mPane.<SPAN 
      class=me1>Rect</SPAN>.<SPAN class=kw6>Width</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Item</SPAN><SPAN 
      class=br0>(</SPAN>PaneIndex<SPAN class=br0>)</SPAN>.<SPAN 
      class=me1>YAxis</SPAN>.<SPAN class=me1>MinSpace</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw6>End</SPAN> <SPAN 
      class=kw6>If</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mPane.<SPAN class=me1>Item</SPAN><SPAN class=br0>(</SPAN>PaneIndex<SPAN 
      class=br0>)</SPAN>.<SPAN class=me1>ReSize</SPAN><SPAN 
      class=br0>(</SPAN>CreateGraphics<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>, SmallRect<SPAN class=br0>)</SPAN><BR><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw2>Next</SPAN> PaneIndex<BR><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; mPane.<SPAN class=me1>Legend</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>16</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>BaseDimension</SPAN> <SPAN class=sy0>=</SPAN> 
      12.0F<BR>&nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN 
      class=me1>Margin</SPAN>.<SPAN class=me1>Top</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>22</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Margin</SPAN>.<SPAN class=kw7>Left</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>5</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Margin</SPAN>.<SPAN class=kw7>Right</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>35</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Margin</SPAN>.<SPAN class=me1>Bottom</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>1</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; mPane.<SPAN class=me1>Legend</SPAN>.<SPAN 
      class=me1>Location</SPAN>.<SPAN class=me1>Height</SPAN> <SPAN 
      class=sy0>=</SPAN> mPane.<SPAN class=me1>Legend</SPAN>.<SPAN 
      class=me1>Location</SPAN>.<SPAN class=me1>Height</SPAN> <SPAN 
      class=sy0>+</SPAN> <SPAN class=nu0>5</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      mPane.<SPAN class=me1>Legend</SPAN>.<SPAN class=me1>Position</SPAN> <SPAN 
      class=sy0>=</SPAN> LegendPos.<SPAN 
      class=me1>InsideTopRight</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN 
      class=me1>Legend</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>25</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw6>Dim</SPAN> r<SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0</SPAN><SPAN class=br0>)</SPAN> <SPAN class=kw2>As</SPAN> <SPAN 
      class=kw4>Integer</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; mPane.<SPAN 
      class=me1>IsFontsScaled</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>True</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>'Это переопределяло размеры раньше</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>'mPane.SetLayout(CreateGraphics(), 
      PaneLayout.SingleRow)</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>'Заполняем значениями</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw2>Me</SPAN>.<SPAN class=me1>ZedGraphControl1</SPAN>.<SPAN 
      class=me1>IsShowPointValues</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>True</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw2>Me</SPAN>.<SPAN class=me1>ZedGraphControl1</SPAN>.<SPAN 
      class=me1>AxisChange</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw2>Me</SPAN>.<SPAN class=me1>ZedGraphControl1</SPAN>.<SPAN 
      class=me1>Invalidate</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN></DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=1" 
      type=text/plain>[Get Code]</A></DIV></DIV>
      <P class=vspace>Конечно часть кода вырезал но весь смысл в определении 
</P><PRE> <STRONG>mPane.Item(PaneIndex).ReSize(CreateGraphics(), SmallRect)</STRONG>
</PRE>
      <P>Результат динамически настраиваемая ширина конечно код сырой но 
      работает </P>
      <DIV class=vspace></DIV></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Anton</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2008 - 13:50</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Вот фотки того что получилось</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P><A class=urllink 
      href="http://picasaweb.google.ru/linux.xakep/ZedGraph?feat=directlink">http://picasaweb.google.ru/linux.xakep/ZedGraph?feat=directlink</A> 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2008 - 14:13</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Anton</STRONG>, а красиво смотрится :) Если Вы не против, то я 
      сделаю на основе Вашего примера пример для шпаргалки. </P>
      <DIV class=vspace></DIV></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Vardes</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2008 - 22:24</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Такой вопрос, как построить несколько графиков один под другим, не 
      кидая на форму новых компонентов... Заранее спасибо... </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Vardes</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2008 - 23:28</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Ещё возникли сложности: PointPairList работает только с типом double, 
      возникает вопрос, как сделать,чтобы по оси Х располагались строковые 
      переменные, а по оси Y double и именно в линейных графиках? К примеру Саша 
      - 5 Коля - 8 Вася - 10... </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">20.12.2008 - 08:56</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Vardes</STRONG>, </P>
      <P class=vspace>По поводу нескольких графиков - надо смотреть в сторону 
      MasterPane, скоро я выложу пример такого использования. </P>
      <P class=vspace>А чтобы присвоить меткам на оси строковые значения есть 
      свойство </P>
      <P class=vspace>Pane.XAxis.Scale.TextLabels </P>
      <P class=vspace>Только надо не забыть установить </P>
      <P class=vspace>Pane.XAxis.Type = AxisType.Text; </P>
      <DIV class=vspace></DIV></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Anton</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.12.2008 - 07:18</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Не жалко</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>"а красиво смотрится :) Если Вы не против, то я сделаю на основе Вашего 
      примера пример для шпаргалки. " </P>
      <P class=vspace>Да пожалуйста пользуйся <IMG class=smiley 
      title="winking smiley" height=15 alt="winking smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/wink.gif" 
      width=15 border=0> </P></DIV>
      <DIV class=vspace></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>sWitch_2009</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.04.2009 - 10:24</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Как изменить формат подписей</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>BarItem.CreateBarLabels(myPane, false, "f0"); Я так понимаю, f0 делает 
      подписи типа int, цифры после запятой обрезаются. А мне надо... для типа 
      double как это будет? </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.04.2009 - 10:31</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>To <STRONG>sWitch_2009</STRONG>: </P>
      <P class=vspace>На сколько я понял из документации (сам я эту фичу не 
      использовал), последний параметр в CreateBarLabels использует те же строки 
      форматирования, что и double.ToString(). "f0" как раз и означает дробные 
      числа, но после запятой оставить 0 цифр, поэтому можно попробовать 
      что-нибудь вроде "f3" и т.п. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>sWitch_2009</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">23.04.2009 - 11:27</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Большое спасибо!!!</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Все гениальное просто!<IMG class=smiley title="happy smiley" height=15 
      alt="happy smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/happy.gif" 
      width=15 border=0> </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>sWitch_2009</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">23.04.2009 - 12:10</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Проблема с обновлением графиков</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>При обновлении zgc.Invalidate(); следующий график накладывается 
      почему-то на предыдущий, приходится перезапускать форму, чтоб он обновился 
      в соответствии с новыми данными. Подскажите, пожалуйста, если есть от 
      этого лекарство. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">23.04.2009 - 19:35</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Это уже надо смотреть на остальной код, так сходу что-то сказать 
      трудно. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>sWitch_2009</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">24.04.2009 - 12:09</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Обновление графиков</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Если взять хоть даже код с <A class=urllink 
      href="http://zedgraph.org/wiki/index.php?title=Multi-Colored_Bar_Demo">http://zedgraph.org/wiki/index.php?title=Multi-Colored_Bar_Demo</A> 
      для построения гистограммы, организовать загрузку диаграммы не сразу при 
      загрузке формы, а по кнопке на этой форме, и в конце кода функции 
      CreateGraph_GradientByZBars( ZedGraphControl z1 ) запросить 
      ZedGraphControl.Invalidate();, то при повторном нажатии кнопки графики 
      будут накладываться друг на друга. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">24.04.2009 - 13:38</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>To sWitch_2009: </P>
      <P class=vspace>Он не наезжает, он просто создает каждый раз новые полоски 
      для Bar. Чтобы этого не было, добавьте вторую строку: </P>
      <DIV class=vspace></DIV>
      <DIV class="sourceblock " id=sourceblock2>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace">GraphPane myPane <SPAN 
      class=sy0>=</SPAN> z1.<SPAN class=me1>GraphPane</SPAN>;<BR>myPane.<SPAN 
      class=me1>CurveList</SPAN>.<SPAN class=me1>Clear</SPAN> <SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;</DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=2" 
      type=text/plain>[Get Code]</A></DIV></DIV>
      <DIV class=vspace></DIV></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>sWitch_2009</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">27.04.2009 - 09:25</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Спасибо большое!!!</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Как хорошо, что вы тут есть! </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Никита</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">12.05.2009 - 16:05</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>А можно ли найти точки пересечения</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>А можно ли найти точки пересечения двух Curve средствами самого 
      Zedgraph? </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>barter</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">04.06.2009 - 08:35</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>отменить масштабирование шрифтов</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>не могу побороть вот это: если привязать контрол к форме и изменять 
      размер формы, то в месте со всей графикой масштабируются и шрифты 
      заголовков и подписей осей. подскажите как этого избежать плиз... 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Malicious</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">10.06.2009 - 17:53</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>отображение промежутка</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Здравствуйте. Моя программа отображает показания датчика в зависимости 
      от его положения на прямой, данный поступают непрерывно. Мне необходимо 
      чтобы отображался участок кривой с последними 500 значениями, как можно 
      реализовать это? И еще как лучше организовать перерисовку кривой, если 
      количество значений порядка 10 000 000, я предполагаю что каждый раз 
      перерисовывать кривую будет очень медленно. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">10.06.2009 - 20:05</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Malicious, я бы не стал сваливать работу по отсечению лишних показаний 
      на ZedGraph, а создал бы что-то вроде списка с конечной длиной, где бы 
      хранились последние показания. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Malicious</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">11.06.2009 - 09:01</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Спасибо за совет</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Пробовал использовать Queue, но не получается отрисовать кривую, 
      ZedGraph ругается на несоответствие типов. Как правильно это организовать 
      - не знаю. Поэтому пока что использую способ Pane.XAxis.Scale.Min = x-500; 
      Pane.XAxis.Scale.Max = x; Jenyay не могли бы вы подсказать как мне 
      правильно использовать Queue </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">11.06.2009 - 09:32</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Да, в принципе, и Queue можно использовать. Только нужно по одной точке 
      добавлять в кривую графика. Примерно как это сделано в первом примере 
      здесь. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Malicious</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">11.06.2009 - 10:35</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Ни как не могу разобраться с Queue( Не могли бы вы привести кусочек 
      такого кода для примера? </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">11.06.2009 - 17:55</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Malicious, а создайте, пожалуйста, на форуме соответствующую тему. 
      Просто здесь комментарии разрослись, уже неудобно что-то писать. Я ближе к 
      вечеру постараюсь какой-нибудь пример сделать. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">18.06.2009 - 22:47</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Проблемы быстрдействия ZedGraph</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>У меня вот какая проблема. Необходимо отображать точку в реальном 
      режиме сразу же после ее поступления в программу. Для чистоты эксперимента 
      слепил простенький тест с ZedGraph. </P>
      <DIV class="sourceblock " id=sourceblock3>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace"><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Collections</SPAN></SPAN>.<SPAN 
      class=me1>Generic</SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>ComponentModel</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Data</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>Drawing</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Text</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System</SPAN>.<SPAN class=me1>Windows</SPAN>.<SPAN 
      class=me1>Forms</SPAN>;<BR><SPAN class=kw1>using</SPAN> 
      ZedGraph;<BR><BR><SPAN class=kw1>namespace</SPAN> Test<BR><SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; <SPAN class=kw1>public</SPAN> partial 
      <SPAN class=kw4>class</SPAN> TestForm <SPAN class=sy0>:</SPAN> 
      Form<BR>&nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw1>public</SPAN> GraphPane myP;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw4>long</SPAN> m1, m2;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; LineItem mySerP;<BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> TestForm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      InitializeComponent<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение ZedGraph с учетом изменения размеров 
      формы</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>private</SPAN> 
      <SPAN class=kw1>void</SPAN> SetSize<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Location</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Point<SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0</SPAN>, <SPAN class=nu0>0</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Size<SPAN class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>ClientRectangle</SPAN>.<SPAN class=me1>Width</SPAN>, <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>ClientRectangle</SPAN>.<SPAN 
      class=me1>Height</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; zg6.<SPAN class=me1>Refresh</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение размеров ФМ06</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> F06_Resize<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Shown<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>Move</SPAN> <SPAN 
      class=sy0>+=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw5>System</SPAN>.<SPAN class=me1>EventHandler</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>F06_Resize</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>Resize</SPAN> <SPAN class=sy0>+=</SPAN> <SPAN 
      class=kw3>new</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>EventHandler</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>F06_Resize</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Load<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP <SPAN class=sy0>=</SPAN> zg6.<SPAN 
      class=me1>GraphPane</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=co1>// Убираем всякий мусор (титлы и надписи по 
      осям)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>6</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>" "</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=co1>// резервируем поле сверху графика</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>XAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Настройка шрифта 
      осей</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>IsBold</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>true</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>IsBold</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>true</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// Градиентная заливка графика</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>Chart</SPAN>.<SPAN 
      class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Fill<SPAN class=br0>(</SPAN>Color.<SPAN class=me1>White</SPAN>, 
      Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN class=br0>)</SPAN>;<BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Градиентная заливка 
      коймы графика</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Fill<SPAN class=br0>(</SPAN>Color.<SPAN 
      class=me1>White</SPAN>, Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>AxisChange</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// перерисовка ZedGraph</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>mySerP <SPAN class=sy0>!=</SPAN> <SPAN 
      class=kw1>null</SPAN><SPAN class=br0>)</SPAN> mySerP.<SPAN 
      class=me1>Clear</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> XX 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> YY 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; XX<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN 
      class=br0>]</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>; 
      YY<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN class=br0>]</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP <SPAN class=sy0>=</SPAN> myP.<SPAN 
      class=me1>AddCurve</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=st0>""</SPAN>, XX, YY, Color.<SPAN class=me1>DarkBlue</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Определяем серии измерений</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> SymbolType.<SPAN 
      class=me1>Circle</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// делаем линии соединяющие точки 
      невидимыми</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Line</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// толщина линии 2 
      пикселя</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mySerP.<SPAN 
      class=me1>Line</SPAN>.<SPAN class=me1>Width</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>10</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// точки в виде сплошных 
      кругов</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mySerP.<SPAN 
      class=me1>Symbol</SPAN>.<SPAN class=me1>Fill</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> FillType.<SPAN 
      class=me1>Solid</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// определяем размер точек</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>4</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Tm<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw4>double</SPAN> r;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; m2 <SPAN class=sy0>=</SPAN> DateTime.<SPAN 
      class=me1>Now</SPAN>.<SPAN class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; r <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0000001</SPAN> <SPAN class=sy0>*</SPAN> <SPAN 
      class=br0>(</SPAN>m2 <SPAN class=sy0>-</SPAN> m1<SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      label1.<SPAN class=me1>Text</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=st0>"Время выполнения= "</SPAN> <SPAN class=sy0>+</SPAN> r.<SPAN 
      class=me1>ToString</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=st0>"0.0"</SPAN><SPAN class=br0>)</SPAN> <SPAN class=sy0>+</SPAN> 
      <SPAN class=st0>"сек"</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      zg6.<SPAN class=me1>Refresh</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      label1.<SPAN class=me1>Refresh</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> button1_Click<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN> x, y, Sg;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; m1 <SPAN class=sy0>=</SPAN> DateTime.<SPAN 
      class=me1>Now</SPAN>.<SPAN class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; Sg <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0</SPAN>; x <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0</SPAN>; <BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>while</SPAN> <SPAN class=br0>(</SPAN>Sg <SPAN 
      class=sy0>&lt;</SPAN> <SPAN class=br0>(</SPAN><SPAN class=nu0>12.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; y <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>250.0</SPAN> &nbsp;<SPAN class=sy0>+</SPAN> <SPAN 
      class=br0>(</SPAN><SPAN class=nu0>250.0</SPAN> <SPAN class=sy0>*</SPAN> 
      Math.<SPAN class=me1>Sin</SPAN><SPAN class=br0>(</SPAN>Sg<SPAN 
      class=br0>)</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>AddPoint</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN>x<SPAN class=br0>)</SPAN>, <SPAN 
      class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>(</SPAN>y<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Sg <SPAN class=sy0>+=</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0.5</SPAN> <SPAN class=sy0>*</SPAN> <SPAN class=nu0>6.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN> <SPAN class=sy0>/</SPAN> <SPAN 
      class=nu0>250.0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; x <SPAN class=sy0>+=</SPAN> <SPAN 
      class=nu0>0.5</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Tm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR><SPAN 
      class=br0>}</SPAN></DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=3" 
      type=text/plain>[Get Code]</A></DIV></DIV>
      <P class=vspace>Если производить отрисовку поточечно (как в указанном 
      тесте), то тест выполняется слишком долго. </P>
      <P class=vspace>Можно ускорить его работу, например как в примере 2 
      (заменив Refresh() на Invalidate()), </P>
      <DIV class="sourceblock " id=sourceblock4>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace"><SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Tm<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw4>double</SPAN> r;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; m2 <SPAN class=sy0>=</SPAN> DateTime.<SPAN 
      class=me1>Now</SPAN>.<SPAN class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; r <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0000001</SPAN> <SPAN class=sy0>*</SPAN> <SPAN 
      class=br0>(</SPAN>m2 <SPAN class=sy0>-</SPAN> m1<SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      label1.<SPAN class=me1>Text</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=st0>"Время выполнения= "</SPAN> <SPAN class=sy0>+</SPAN> r.<SPAN 
      class=me1>ToString</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=st0>"0.0"</SPAN><SPAN class=br0>)</SPAN> <SPAN class=sy0>+</SPAN> 
      <SPAN class=st0>"сек"</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>//zg6.Refresh();</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; zg6.<SPAN class=me1>Invalidate</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; label1.<SPAN class=me1>Refresh</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR>&nbsp;</DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=4" 
      type=text/plain>[Get Code]</A></DIV></DIV>
      <P>либо как в примере 3 (перенеся Refresh() из Tm() в конец цикла 
      отрисовки синусоиды. </P>
      <DIV class="sourceblock " id=sourceblock5>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace"><SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> button1_Click<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN> x, y, Sg;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; m1 <SPAN class=sy0>=</SPAN> DateTime.<SPAN 
      class=me1>Now</SPAN>.<SPAN class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; Sg <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0</SPAN>; x <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0.0</SPAN>; <BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>while</SPAN> <SPAN class=br0>(</SPAN>Sg <SPAN 
      class=sy0>&lt;</SPAN> <SPAN class=br0>(</SPAN><SPAN class=nu0>12.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; y <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>250.0</SPAN> &nbsp;<SPAN class=sy0>+</SPAN> <SPAN 
      class=br0>(</SPAN><SPAN class=nu0>250.0</SPAN> <SPAN class=sy0>*</SPAN> 
      Math.<SPAN class=me1>Sin</SPAN><SPAN class=br0>(</SPAN>Sg<SPAN 
      class=br0>)</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>AddPoint</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN>x<SPAN class=br0>)</SPAN>, <SPAN 
      class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>(</SPAN>y<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Sg <SPAN class=sy0>+=</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0.5</SPAN> <SPAN class=sy0>*</SPAN> <SPAN class=nu0>6.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN> <SPAN class=sy0>/</SPAN> <SPAN 
      class=nu0>250.0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; x <SPAN class=sy0>+=</SPAN> <SPAN 
      class=nu0>0.5</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Tm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Refresh</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// либо zg6.Invalidate();</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN></DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=5" 
      type=text/plain>[Get Code]</A></DIV></DIV>
      <P>Однако в этих случаях отрисовка точек производится сразу всех скопом, а 
      их необходимо отображать одну за другой. </P>
      <P class=vspace>Подскажите как можно решить данную проблему и существенно 
      ускорить работу данного теста. </P>
      <DIV class=vspace></DIV></DIV>
      <DIV class=vspace></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 10:40</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>v567, Вообще, если нужно рисовать точки последовательно, то лучше для 
      этого использовать таймер, на каждый тик которого добавлять одну точку в 
      список и выводить из все разом. Иначе при том сделано сейчас, скорость 
      вывода точек будет зависеть от скорость компьютера, на котором выполняется 
      программа. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 13:18</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Таймер не подходит, поскольку работает с определенной дискретностью. 
      Задача же заключается в том, что необходимо мгновенно отобразить 
      ассинхронно поступающие данные безо всяких задержек. В идеале нужно чтобы 
      точка на графике отображалась сразу же после добавления (например так как 
      это делает TChart в Delphi), а не после вызова Refresh (или связки 
      Invalidate + Update), который обновляет всю область графика. Если брать 
      TChart в Delphi, то команда Chart.Series.AddXY сразу же отображает точку 
      на графике. Аналогичной в ZedGraph процедуре AddPoint для отображения 
      точки почему то требуется дополнительный вызов Refresh. В результате 
      TChart работает значительно быстрее, чем ZedGraph. </P>
      <P class=vspace>Так как на экране необходимо видеть точку сразу же после 
      прихода данных возникает вопрос: как ускорить поточечную отрисовку в 
      ZedGraph? Т.е. после прихода точку её нужно сразу же оторазить ничего не 
      дожидаясь и не ожидая прихода других данных. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 13:31</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>А почему тогда нельзя сохранять все точки, которые нужно нарисовать, и 
      рисовать их все разом? Когда появится новая точка, пользователю будет 
      казаться, что они только что добавились, ведь старые останутся на месте. 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 14:34</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Почему нельзя рисовать старые точки? Их можно рисовать хоть по десять 
      проходов. Просто скорость отрисовки падает в разы. Одно дело одну точку 
      нарисовать (предположительно как в TChart), а другое дело перерисовать всю 
      область графика (как в Zedgraph после Refresh). Как бы там ни было, но 
      аналогичный тест в delphi работает менее секунды zedgraph же пашет секунд 
      15. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 14:49</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Значит я не правильно понял что требуется. Надо будет поиграться с 
      Вашим примером. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.06.2009 - 15:22</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Проект можно взять по адресу: <A class=urllink 
      href="http://linuxforum.ru/index.php?showtopic=90260">http://linuxforum.ru/index.php?showtopic=90260</A> 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG></STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">23.06.2009 - 18:21</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P><IMG class=smiley title="cool smiley" height=15 alt="cool smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/cool.gif" 
      width=15 border=0> </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">24.06.2009 - 12:54</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>В поисках решения проблемы ускорения работы ZedGraph обнаружил 
      интересную особенность метода Invalidate(): обновление производится после 
      окончания работы потока его вызывающего. Для учета этой особенности 
      изменил вышеуказанный тест, введя фоновый поток. В результате обновление 
      производится корректно (именно так как надо, т.е. с помощью Invalidate() и 
      при этом поточечно). Лучшая скорость работы теста с фоновым потоком 
      составила 13.6 сек (старого - 15.4 сек). В связи с этим напрашивается 
      вывод о том, что это и есть потолок быстродействия и библиотеки ZedGraph и 
      платформы .NET в целом. Что в свою очередь означает, что быстродействие 
      .NET значительно уступает быстродействию Win32. Напоминаю, что аналогичная 
      поточечная отрисовка с помощью компонента TChart в Delphi занимает менее 1 
      секунды. </P>
      <P class=vspace>Текст теста с фоновым потоком: </P>
      <DIV class=vspace></DIV>
      <DIV class="sourceblock " id=sourceblock6>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace"><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Collections</SPAN></SPAN>.<SPAN 
      class=me1>Generic</SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>ComponentModel</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Data</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>Drawing</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>Linq</SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>Text</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>Windows</SPAN>.<SPAN class=me1>Forms</SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Threading</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> 
      ZedGraph;<BR><BR><SPAN class=kw1>namespace</SPAN> Test<BR><SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; <SPAN class=kw1>public</SPAN> partial 
      <SPAN class=kw4>class</SPAN> TestForm <SPAN class=sy0>:</SPAN> 
      Form<BR>&nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; Thread FProc;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> GraphPane myP;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw4>long</SPAN> m1, m2;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      LineItem mySerP;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN> x, y, Sg;<BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>public</SPAN> TestForm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      InitializeComponent<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      Vars.<SPAN class=me1>ObjTstF</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>this</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение ZedGraph с учетом изменения размеров 
      формы</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>private</SPAN> 
      <SPAN class=kw1>void</SPAN> SetSize<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Location</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Point<SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0</SPAN>, <SPAN class=nu0>0</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Size<SPAN class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>ClientRectangle</SPAN>.<SPAN class=me1>Width</SPAN>, <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>ClientRectangle</SPAN>.<SPAN 
      class=me1>Height</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; zg6.<SPAN class=me1>Refresh</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение размеров формы</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      F06_Resize<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, 
      EventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Shown<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>Move</SPAN> <SPAN 
      class=sy0>+=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw5>System</SPAN>.<SPAN class=me1>EventHandler</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>F06_Resize</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>Resize</SPAN> <SPAN class=sy0>+=</SPAN> <SPAN 
      class=kw3>new</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>EventHandler</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>F06_Resize</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Load<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> Thread<SPAN 
      class=br0>(</SPAN>FTimer.<SPAN class=me1>FonProc</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP <SPAN class=sy0>=</SPAN> zg6.<SPAN 
      class=me1>GraphPane</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=co1>// Убираем всякий мусор (титлы и надписи по 
      осям)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>6</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>" "</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>XAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Настройка шрифта 
      осей</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>IsBold</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>true</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>IsBold</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>true</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// Градиентная заливка графика</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>Chart</SPAN>.<SPAN 
      class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Fill<SPAN class=br0>(</SPAN>Color.<SPAN class=me1>White</SPAN>, 
      Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN class=br0>)</SPAN>;<BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Градиентная заливка 
      коймы графика</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Fill<SPAN class=br0>(</SPAN>Color.<SPAN 
      class=me1>White</SPAN>, Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>AxisChange</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
      class=co1>// перерисовка ZedGraph</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>mySerP <SPAN class=sy0>!=</SPAN> <SPAN 
      class=kw1>null</SPAN><SPAN class=br0>)</SPAN> mySerP.<SPAN 
      class=me1>Clear</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> XX 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> YY 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; XX<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN 
      class=br0>]</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>; 
      YY<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN class=br0>]</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP <SPAN class=sy0>=</SPAN> myP.<SPAN 
      class=me1>AddCurve</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=st0>""</SPAN>, XX, YY, Color.<SPAN class=me1>DarkBlue</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Определяем параметры серии</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> SymbolType.<SPAN 
      class=me1>Circle</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Line</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>Line</SPAN>.<SPAN 
      class=me1>Width</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>10</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN class=me1>Fill</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> FillType.<SPAN 
      class=me1>Solid</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>4</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// Процедура перерисовки графика</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw1>void</SPAN> 
      Tm<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw4>double</SPAN> r;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>InvokeRequired</SPAN> <SPAN 
      class=sy0>==</SPAN> <SPAN class=kw1>false</SPAN><SPAN class=br0>)</SPAN> 
      &nbsp; <SPAN class=co1>// наш поток ?</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m2 <SPAN class=sy0>=</SPAN> 
      DateTime.<SPAN class=me1>Now</SPAN>.<SPAN 
      class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; r <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0.0000001</SPAN> 
      <SPAN class=sy0>*</SPAN> <SPAN class=br0>(</SPAN>m2 <SPAN 
      class=sy0>-</SPAN> m1<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label1.<SPAN class=me1>Text</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=st0>"Время выполнения= "</SPAN> <SPAN 
      class=sy0>+</SPAN> r.<SPAN class=me1>ToString</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=st0>"0.0"</SPAN><SPAN class=br0>)</SPAN> 
      <SPAN class=sy0>+</SPAN> <SPAN class=st0>"сек"</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>//zg6.Refresh();</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>//label1.Refresh();</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Invalidate</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>else</SPAN> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
      class=co1>// если не наш пускаем процедуру Invok'ом</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DrawT FDraw <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> DrawT<SPAN 
      class=br0>(</SPAN>Tm<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>FProc <SPAN class=sy0>!=</SPAN> <SPAN 
      class=kw1>null</SPAN><SPAN class=br0>)</SPAN> <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>Invoke</SPAN><SPAN 
      class=br0>(</SPAN>FDraw<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      button1_Click<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, 
      EventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m1 <SPAN 
      class=sy0>=</SPAN> DateTime.<SPAN class=me1>Now</SPAN>.<SPAN 
      class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sg 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0.0</SPAN>; x <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>0.0</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// запускаем поток 
      таймера</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Vars.<SPAN 
      class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>true</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      FProc.<SPAN class=me1>Start</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Самодельный таймер вызываемый фоновым 
      потоком</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>void</SPAN> timer<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      Vars.<SPAN class=me1>S</SPAN>.<SPAN class=me1>PrRabs</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>true</SPAN>;<BR><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>Sg <SPAN class=sy0>&lt;</SPAN> <SPAN 
      class=br0>(</SPAN><SPAN class=nu0>12.0</SPAN> <SPAN class=sy0>*</SPAN> 
      Math.<SPAN class=me1>PI</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; y <SPAN class=sy0>=</SPAN> <SPAN class=nu0>250</SPAN> <SPAN 
      class=sy0>+</SPAN> <SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN><SPAN class=nu0>250.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>Sin</SPAN><SPAN 
      class=br0>(</SPAN>Sg<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; mySerP.<SPAN class=me1>AddPoint</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN>x<SPAN class=br0>)</SPAN>, <SPAN 
      class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>(</SPAN>y<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Sg <SPAN class=sy0>+=</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0.5</SPAN> <SPAN class=sy0>*</SPAN> <SPAN class=nu0>6.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN> <SPAN class=sy0>/</SPAN> <SPAN 
      class=nu0>250.0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; x <SPAN class=sy0>+=</SPAN> <SPAN 
      class=nu0>0.5</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Tm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>else</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Vars.<SPAN class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN>FProc 
      <SPAN class=sy0>!=</SPAN> <SPAN class=kw1>null</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.<SPAN 
      class=me1>Sleep</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=nu0>300</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc.<SPAN 
      class=me1>Abort</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Vars.<SPAN class=me1>S</SPAN>.<SPAN class=me1>PrRabs</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      TestForm_FormClosed<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> 
      sender, FormClosedEventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Vars.<SPAN class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> 
      <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN>FProc <SPAN 
      class=sy0>!=</SPAN> <SPAN class=kw1>null</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Thread.<SPAN class=me1>Sleep</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=nu0>300</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc.<SPAN class=me1>Abort</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; <SPAN class=co1>// Делегат для 
      решения проблем синхронизации потоков</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=kw4>delegate</SPAN> <SPAN class=kw1>void</SPAN> DrawT<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR><BR><BR>&nbsp; &nbsp; <SPAN 
      class=co1>// Класс с переменными общего доступа для всех 
      потоков</SPAN><BR>&nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN 
      class=kw4>class</SPAN> Vars<BR>&nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> Vars S <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> Vars<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp;<SPAN class=co1>// Собственный Class</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> <SPAN 
      class=kw4>bool</SPAN> PrTm <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> TestForm ObjTstF 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw1>null</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw4>bool</SPAN> 
      PrRabs <SPAN class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; <SPAN 
      class=co1>// фоновый поток таймера</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=kw4>class</SPAN> FTimer<BR>&nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> <SPAN 
      class=kw1>void</SPAN> FonProc<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>while</SPAN> <SPAN class=br0>(</SPAN>Vars.<SPAN 
      class=me1>PrTm</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.<SPAN 
      class=me1>Sleep</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>Vars.<SPAN class=me1>S</SPAN>.<SPAN 
      class=me1>PrRabs</SPAN> <SPAN class=sy0>==</SPAN> <SPAN 
      class=kw1>false</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Vars.<SPAN 
      class=me1>ObjTstF</SPAN>.<SPAN class=me1>timer</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><SPAN class=br0>}</SPAN></DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=6" 
      type=text/plain>[Get Code]</A></DIV></DIV></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">24.06.2009 - 13:12</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Проект целиком кроме ссылки на linuxforum можно ещё взять здесь: <A 
      class=urllink 
      href="http://www.cyberforum.ru/csharp-net/thread41029.html">http://www.cyberforum.ru/csharp-net/thread41029.html</A> 
      В указанной ссылке тест содержит текст (без фонового потока) который 
      приводился ранее. </P>
      <P class=vspace>А с фоновым потоком выполнимый файл сделать труда не 
      составит. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>v567</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">24.06.2009 - 19:24</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Решение найдено. <IMG class=smiley title="happy smiley" height=15 
      alt="happy smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/happy.gif" 
      width=15 border=0> Как оказалось достаточно убрать в процедуре 
      FTimer.FonProc() вызов Thread.Sleep(0). Время работы теста в этом случае 
      составит 0.8 сек. Что более чем на порядок превосходит предыдущие 
      результаты, но приблизительно в 4 раза хуже, чем в TChart'е. Однако это 
      уже можно списать на медлительность .NET </P>
      <P class=vspace>Итак, итоговый вариант выглядит так <IMG class=smiley 
      title="happy smiley" height=15 alt="happy smiley" 
      src="Шпаргалка по ZedGraph  Софт, исходники и фото.files/happy.gif" 
      width=15 border=0>: </P>
      <DIV class="sourceblock " id=sourceblock7>
      <DIV class=sourceblocktext>
      <DIV class=csharp style="FONT-FAMILY: monospace"><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Collections</SPAN></SPAN>.<SPAN 
      class=me1>Generic</SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>ComponentModel</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Data</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>Drawing</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>Linq</SPAN>;<BR><SPAN class=kw1>using</SPAN> <SPAN 
      class=kw5>System.<SPAN class=me1>Text</SPAN></SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>Windows</SPAN>.<SPAN class=me1>Forms</SPAN>;<BR><SPAN 
      class=kw1>using</SPAN> <SPAN class=kw5>System.<SPAN 
      class=me1>Threading</SPAN></SPAN>;<BR><SPAN class=kw1>using</SPAN> 
      ZedGraph;<BR><BR><SPAN class=kw1>namespace</SPAN> Test<BR><SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; <SPAN class=kw1>public</SPAN> partial 
      <SPAN class=kw4>class</SPAN> TestForm <SPAN class=sy0>:</SPAN> 
      Form<BR>&nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; Thread FProc;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> GraphPane myP;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw4>long</SPAN> m1, m2;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      LineItem mySerP;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN> x, y, Sg;<BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>public</SPAN> TestForm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      InitializeComponent<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      Vars.<SPAN class=me1>ObjTstF</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>this</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение ZedGraph с учетом изменения размеров 
      формы</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>private</SPAN> 
      <SPAN class=kw1>void</SPAN> SetSize<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Location</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Point<SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0</SPAN>, <SPAN class=nu0>0</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Size<SPAN class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>ClientRectangle</SPAN>.<SPAN class=me1>Width</SPAN>, <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>ClientRectangle</SPAN>.<SPAN 
      class=me1>Height</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; zg6.<SPAN class=me1>Refresh</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Изменение размеров формы</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      F06_Resize<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, 
      EventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Shown<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=co1>// Изменение размеров 
      ZedGrpah</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>Move</SPAN> <SPAN 
      class=sy0>+=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw5>System</SPAN>.<SPAN class=me1>EventHandler</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>F06_Resize</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>this</SPAN>.<SPAN 
      class=me1>Resize</SPAN> <SPAN class=sy0>+=</SPAN> <SPAN 
      class=kw3>new</SPAN> <SPAN class=kw5>System</SPAN>.<SPAN 
      class=me1>EventHandler</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>F06_Resize</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> Form1_Load<SPAN 
      class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, EventArgs e<SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> Thread<SPAN 
      class=br0>(</SPAN>FTimer.<SPAN class=me1>FonProc</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      SetSize<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP <SPAN class=sy0>=</SPAN> zg6.<SPAN 
      class=me1>GraphPane</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=co1>// Убираем всякий мусор (титлы и надписи по 
      осям)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>6</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>" "</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>XAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Title</SPAN>.<SPAN class=me1>Text</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=st0>""</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Настройка шрифта 
      осей</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>Size</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>9</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>FontSpec</SPAN>.<SPAN class=me1>IsBold</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>true</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>YAxis</SPAN>.<SPAN 
      class=me1>Scale</SPAN>.<SPAN class=me1>FontSpec</SPAN>.<SPAN 
      class=me1>IsBold</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>true</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// Градиентная заливка графика</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN class=me1>Chart</SPAN>.<SPAN 
      class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> 
      Fill<SPAN class=br0>(</SPAN>Color.<SPAN class=me1>White</SPAN>, 
      Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN class=br0>)</SPAN>;<BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=co1>// Градиентная заливка 
      коймы графика</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>Fill</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw3>new</SPAN> Fill<SPAN class=br0>(</SPAN>Color.<SPAN 
      class=me1>White</SPAN>, Color.<SPAN class=me1>Gray</SPAN>, 45F<SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>XAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Min</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; myP.<SPAN 
      class=me1>YAxis</SPAN>.<SPAN class=me1>Scale</SPAN>.<SPAN 
      class=me1>Max</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>500</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      myP.<SPAN class=me1>AxisChange</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
      class=co1>// перерисовка ZedGraph</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>mySerP <SPAN class=sy0>!=</SPAN> <SPAN 
      class=kw1>null</SPAN><SPAN class=br0>)</SPAN> mySerP.<SPAN 
      class=me1>Clear</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> XX 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>; <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN class=br0>]</SPAN> YY 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> <SPAN 
      class=kw4>double</SPAN><SPAN class=br0>[</SPAN><SPAN 
      class=nu0>1</SPAN><SPAN class=br0>]</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; XX<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN 
      class=br0>]</SPAN> <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>; 
      YY<SPAN class=br0>[</SPAN><SPAN class=nu0>0</SPAN><SPAN class=br0>]</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP <SPAN class=sy0>=</SPAN> myP.<SPAN 
      class=me1>AddCurve</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=st0>""</SPAN>, XX, YY, Color.<SPAN class=me1>DarkBlue</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Определяем параметры серии</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> SymbolType.<SPAN 
      class=me1>Circle</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Line</SPAN>.<SPAN class=me1>IsVisible</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; mySerP.<SPAN class=me1>Line</SPAN>.<SPAN 
      class=me1>Width</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=nu0>10</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN class=me1>Fill</SPAN>.<SPAN 
      class=me1>Type</SPAN> <SPAN class=sy0>=</SPAN> FillType.<SPAN 
      class=me1>Solid</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      mySerP.<SPAN class=me1>Symbol</SPAN>.<SPAN class=me1>Size</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>4</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=co1>// Процедура перерисовки графика</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw1>void</SPAN> 
      Tm<SPAN class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw4>double</SPAN> r;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>InvokeRequired</SPAN> <SPAN 
      class=sy0>==</SPAN> <SPAN class=kw1>false</SPAN><SPAN class=br0>)</SPAN> 
      &nbsp; <SPAN class=co1>// наш поток ?</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m2 <SPAN class=sy0>=</SPAN> 
      DateTime.<SPAN class=me1>Now</SPAN>.<SPAN 
      class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; r <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0.0000001</SPAN> 
      <SPAN class=sy0>*</SPAN> <SPAN class=br0>(</SPAN>m2 <SPAN 
      class=sy0>-</SPAN> m1<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; label1.<SPAN class=me1>Text</SPAN> 
      <SPAN class=sy0>=</SPAN> <SPAN class=st0>"Время выполнения= "</SPAN> <SPAN 
      class=sy0>+</SPAN> r.<SPAN class=me1>ToString</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=st0>"0.0"</SPAN><SPAN class=br0>)</SPAN> 
      <SPAN class=sy0>+</SPAN> <SPAN class=st0>"сек"</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>//zg6.Refresh();</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>//label1.Refresh();</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zg6.<SPAN 
      class=me1>Invalidate</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>else</SPAN> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<SPAN 
      class=co1>// если не наш пускаем процедуру Invok'ом</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DrawT FDraw <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> DrawT<SPAN 
      class=br0>(</SPAN>Tm<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>FProc <SPAN class=sy0>!=</SPAN> <SPAN 
      class=kw1>null</SPAN><SPAN class=br0>)</SPAN> <SPAN 
      class=kw1>this</SPAN>.<SPAN class=me1>Invoke</SPAN><SPAN 
      class=br0>(</SPAN>FDraw<SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      button1_Click<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> sender, 
      EventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m1 <SPAN 
      class=sy0>=</SPAN> DateTime.<SPAN class=me1>Now</SPAN>.<SPAN 
      class=me1>Ticks</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sg 
      <SPAN class=sy0>=</SPAN> <SPAN class=nu0>0.0</SPAN>; x <SPAN 
      class=sy0>=</SPAN> <SPAN class=nu0>0.0</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=co1>// запускаем поток 
      таймера</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Vars.<SPAN 
      class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>true</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      FProc.<SPAN class=me1>Start</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=co1>// Самодельный таймер вызываемый фоновым 
      потоком</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>void</SPAN> timer<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      Vars.<SPAN class=me1>S</SPAN>.<SPAN class=me1>PrRabs</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>true</SPAN>;<BR><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN 
      class=br0>(</SPAN>Sg <SPAN class=sy0>&lt;</SPAN> <SPAN 
      class=br0>(</SPAN><SPAN class=nu0>12.0</SPAN> <SPAN class=sy0>*</SPAN> 
      Math.<SPAN class=me1>PI</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; y <SPAN class=sy0>=</SPAN> <SPAN class=nu0>250</SPAN> <SPAN 
      class=sy0>+</SPAN> <SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN><SPAN class=nu0>250.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>Sin</SPAN><SPAN 
      class=br0>(</SPAN>Sg<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; mySerP.<SPAN class=me1>AddPoint</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN 
      class=br0>)</SPAN><SPAN class=br0>(</SPAN>x<SPAN class=br0>)</SPAN>, <SPAN 
      class=br0>(</SPAN><SPAN class=kw4>int</SPAN><SPAN class=br0>)</SPAN><SPAN 
      class=br0>(</SPAN>y<SPAN class=br0>)</SPAN><SPAN 
      class=br0>)</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Sg <SPAN class=sy0>+=</SPAN> <SPAN class=br0>(</SPAN><SPAN 
      class=nu0>0.5</SPAN> <SPAN class=sy0>*</SPAN> <SPAN class=nu0>6.0</SPAN> 
      <SPAN class=sy0>*</SPAN> Math.<SPAN class=me1>PI</SPAN><SPAN 
      class=br0>)</SPAN> <SPAN class=sy0>/</SPAN> <SPAN 
      class=nu0>250.0</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; x <SPAN class=sy0>+=</SPAN> <SPAN 
      class=nu0>0.5</SPAN>;<BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Tm<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>else</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Vars.<SPAN class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN>FProc 
      <SPAN class=sy0>!=</SPAN> <SPAN class=kw1>null</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.<SPAN 
      class=me1>Sleep</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=nu0>300</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc.<SPAN 
      class=me1>Abort</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Vars.<SPAN class=me1>S</SPAN>.<SPAN class=me1>PrRabs</SPAN> <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>private</SPAN> <SPAN class=kw1>void</SPAN> 
      TestForm_FormClosed<SPAN class=br0>(</SPAN><SPAN class=kw4>object</SPAN> 
      sender, FormClosedEventArgs e<SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; Vars.<SPAN class=me1>PrTm</SPAN> <SPAN class=sy0>=</SPAN> 
      <SPAN class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN>FProc <SPAN 
      class=sy0>!=</SPAN> <SPAN class=kw1>null</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; Thread.<SPAN class=me1>Sleep</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=nu0>300</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FProc.<SPAN class=me1>Abort</SPAN><SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; 
      <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; <SPAN class=co1>// Делегат для 
      решения проблем синхронизации потоков</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=kw4>delegate</SPAN> <SPAN class=kw1>void</SPAN> DrawT<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>;<BR><BR><BR>&nbsp; &nbsp; <SPAN 
      class=co1>// Класс с переменными общего доступа для всех 
      потоков</SPAN><BR>&nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN 
      class=kw4>class</SPAN> Vars<BR>&nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> Vars S <SPAN 
      class=sy0>=</SPAN> <SPAN class=kw3>new</SPAN> Vars<SPAN 
      class=br0>(</SPAN><SPAN class=br0>)</SPAN>; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp;<SPAN class=co1>// Собственный Class</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> <SPAN 
      class=kw4>bool</SPAN> PrTm <SPAN class=sy0>=</SPAN> <SPAN 
      class=kw1>false</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> TestForm ObjTstF 
      <SPAN class=sy0>=</SPAN> <SPAN class=kw1>null</SPAN>;<BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>public</SPAN> <SPAN class=kw4>bool</SPAN> 
      PrRabs <SPAN class=sy0>=</SPAN> <SPAN class=kw1>false</SPAN>;<BR>&nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR><BR><BR>&nbsp; &nbsp; <SPAN 
      class=co1>// фоновый поток таймера</SPAN><BR>&nbsp; &nbsp; <SPAN 
      class=kw4>class</SPAN> FTimer<BR>&nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>public</SPAN> <SPAN class=kw1>static</SPAN> <SPAN 
      class=kw1>void</SPAN> FonProc<SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=kw1>while</SPAN> <SPAN class=br0>(</SPAN>Vars.<SPAN 
      class=me1>PrTm</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; <SPAN class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN class=co1>// 
      Thread.Sleep(0);</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; <SPAN class=kw1>if</SPAN> <SPAN class=br0>(</SPAN>Vars.<SPAN 
      class=me1>S</SPAN>.<SPAN class=me1>PrRabs</SPAN> <SPAN class=sy0>==</SPAN> 
      <SPAN class=kw1>false</SPAN><SPAN class=br0>)</SPAN><BR>&nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>{</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; &nbsp; &nbsp; Vars.<SPAN class=me1>ObjTstF</SPAN>.<SPAN 
      class=me1>timer</SPAN><SPAN class=br0>(</SPAN><SPAN 
      class=br0>)</SPAN>;<BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
      &nbsp; <SPAN class=br0>}</SPAN><BR>&nbsp; &nbsp; &nbsp; &nbsp; <SPAN 
      class=br0>}</SPAN><BR>&nbsp; &nbsp; <SPAN class=br0>}</SPAN><BR><SPAN 
      class=br0>}</SPAN></DIV></DIV>
      <DIV class=sourceblocklink><A 
      href="http://jenyay.net/Programming/ZedGraph?action=sourceblock&amp;num=7" 
      type=text/plain>[Get Code]</A></DIV></DIV></DIV>
      <DIV class=vspace></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>hoplin</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">31.08.2009 - 08:45</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>спасибо за материалы. пользуемся ) </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Рутакате</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">09.10.2009 - 23:10</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Как сдвинуть столбцы</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Точнее-как сделать так,чтобы при построении Bar-а,столбцы стояли 
      вплотную друг к другу?Оч срочно!!!)) </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">09.10.2009 - 23:18</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Рутакате, гляньте <A class=urllink 
      href="http://zedgraph.sourceforge.net/documentation/html/T_ZedGraph_BarSettings.htm">этот 
      класс</A> </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>graber</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.10.2009 - 19:21</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>преобразование координат</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>столкнулся с такой проблемой: мне надо, чтобы при движении курсора мыши 
      по графику, выводились координаты курсора в этом графике. как 
      преобразовать экранные координаты к координатам графика. соответственно 
      при выходе курсора за границы графика, считывание координат должно 
      прекратиться. график лежит в определенных интервалах и не масштабируется. 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.10.2009 - 21:37</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>@CintaNotes, </P>
      <P class=vspace>Что-то похожее в ZedGraph есть. Как будет время, 
      покопаюсь. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>graber</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">22.10.2009 - 22:33</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Re:преобразование координат</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>нашел, все работает. может кому поможет, вот код: private bool 
      zedGraphControl1_MouseMoveEvent( ZedGraphControl sender, MouseEventArgs e 
      ) { </P><PRE>   // Save the mouse location
   PointF mousePt = new PointF( e.X, e.Y );

   // Find the Chart rect that contains the current mouse location
   GraphPane pane = sender.MasterPane.FindChartRect( mousePt );

   // If pane is non-null, we have a valid location.  Otherwise, the mouse is not
   // within any chart rect.
   if ( pane != null )
   {
      double x, y;
      // Convert the mouse location to X, and Y scale values
      pane.ReverseTransform( mousePt, out x, out y );
      // Format the status label text
      toolStripStatusXY.Text = "(" + x.ToString("f2") + ", " + y.ToString("f2") + ")";
   }
   else
      // If there is no valid data, then clear the status label text
      toolStripStatusXY.Text = string.Empty;

   // Return false to indicate we have not processed the MouseMoveEvent
   // ZedGraphControl should still go ahead and handle it
   return false;
</PRE>
      <P>} </P>
      <P class=vspace>и ссылка на источник: <A class=urllink 
      href="http://zedgraph.org/wiki/index.php?title=Show_the_X%2CY_Cursor_Location_in_a_Status_bar">http://zedgraph.org/wiki/index.php?title=Show_the_X%2CY_Cursor_Location_in_a_Status_bar</A> 
      </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>zaqazaqaz</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">16.11.2009 - 13:27</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>ПОМОГИТЕ ПЖЛ!!!!!!!</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>у меня построен график подскажите ПЖЛ как сделать такое : по 
      mouseclick, получать координаты точки на которую кликаю а не координаты 
      формы., ну или просто координаты места на графике. ПЖЛ ПЖЛ ПЖЛ ПЖЛ ПЖЛ ПЖЛ 
      ПЖЛ ПЖЛ ПОМОГИТЕ ПОМОГИТЕ ПОМОГИТЕ ПОМОГИТЕ ПОМОГИТЕ ПОМОГИТЕ ПОМОГИТЕ 
      ПОМОГИТЕ ПОМОГИТЕ </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">16.11.2009 - 21:30</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>zaqazaqaz, посмотрите комментарий выше. Попозже постараюсь сделать 
      подобный пример. </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Серж</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">19.12.2009 - 16:43</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG>Была раньше. Точка пересечения двух прямых.</STRONG> </P></DIV>
      <DIV class=messageitem>
      <P>Только вливаюсь в ваши ряды. Вот сразу вопрос - как получить точку 
      пересечения двух Curve? </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Ффф</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">27.01.2010 - 00:20</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Можно ли отключить контекстное меню, которое вылезает по нажатию правой 
      кнопкой мыши на графике? </P></DIV>
      <DIV class=messagehead>
      <P class=vspace><STRONG>Jenyay</STRONG>&nbsp;<SPAN 
      style="FONT-SIZE: 83%">27.01.2010 - 09:25</SPAN> </P></DIV>
      <DIV class=messageitem>
      <P><STRONG></STRONG></P></DIV>
      <DIV class=messageitem>
      <P>Ффф, можно. Для этого надо установить свойство IsShowContextMenu в 
      false. </P></DIV></DIV></TD></TR></TBODY></TABLE><!--PageFooterFmt-->
<DIV id=wikifoot>
<DIV class=footnav><A href="http://jenyay.net/Programming/ZedGraph?action=edit" 
rel=nofollow>Править</A> - <A 
href="http://jenyay.net/Programming/ZedGraph?action=diff" 
rel=nofollow>История</A> - <A 
href="http://jenyay.net/Programming/ZedGraph?action=print" target=_blank 
rel=nofollow>Печать</A> - <A 
href="http://jenyay.net/Programming/RecentChanges">Последние изменения</A> - <A 
href="http://jenyay.net/PmWikiRu/SiteSearch">Поиск</A></DIV>
<DIV class=lastmod>Последняя редакция от 29.01.2010 10:39</DIV></DIV><!--HTMLFooter--><!-- Google Analytics-->
<SCRIPT type=text/javascript>
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</SCRIPT>

<SCRIPT type=text/javascript>
var pageTracker = _gat._getTracker("UA-1218080-1");
pageTracker._initData();
pageTracker._trackPageview();
</SCRIPT>
<!-- Google Analytics--></BODY></HTML>
